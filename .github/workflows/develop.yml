name: Develop
on:
  push:
    branches: [ develop ]
jobs:
  Tests:
    permissions:
      pull-requests: write
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - name: Set up Go
      uses: actions/setup-go@v4
    - name: Build binaries for all platforms
      run: make tests
    - name: Check for existing Pull Request
      id: check_pr
      uses: actions/github-script@v4
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const { data } = await github.pulls.list({
            owner: context.repo.owner,
            repo: context.repo.repo,
            head: 'develop',
            base: 'main',
            state: 'open'
          });
          if (data.length > 0) {
            await github.pulls.update({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: data[0].number,
              state: 'closed'
            });
          }
    - name: Create Pull Request
      id: create_pr
      uses: actions/github-script@v4
      with:
        github-token: ${{ secrets.GH_OFA }}
        script: |
          const { data } = await github.pulls.create({
            owner: context.repo.owner,
            repo: context.repo.repo,
            title: 'Automated Pull Request from develop to main',
            head: 'develop',
            base: 'main',
            body: 'Automated Pull Request created by GitHub Actions'
          });
          console.log(data.number);
          core.setOutput('pull_request_number', data.number);
    - name: Approve Pull Request
      uses: actions/github-script@v4
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          await github.pulls.createReview({
            owner: context.repo.owner,
            repo: context.repo.repo,
            pull_number: ${{ steps.create_pr.outputs.pull_request_number }},
            event: 'APPROVE'
          }); 
    - name: Wait for Pull Request Status
      id: wait_for_status
      uses: actions/github-script@v4
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const { data } = await github.pulls.checkIfMerged({
            owner: context.repo.owner,
            repo: context.repo.repo,
            pull_number: ${{ steps.create_pr.outputs.pull_request_number }}
          });
          console.log(data.merged);
          core.setOutput('pull_request_merged', data.merged);
      continue-on-error: true

    - name: Merge Pull Request
      if: steps.wait_for_status.outputs.pull_request_merged == 'true'
      uses: actions/github-script@v4
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          await github.pulls.merge({
            owner: context.repo.owner,
            repo: context.repo.repo,
            pull_number: ${{ steps.create_pr.outputs.pull_request_number }}
          });

    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v3
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        file: ./coverage.txt
        flags: unittests # optional
        fail_ci_if_error: true # optional (default = false)
        verbose: true # optional (default = false)